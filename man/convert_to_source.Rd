% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_df_to_source.R
\name{convert_df_to_source}
\alias{convert_df_to_source}
\alias{convert_csv_to_source}
\alias{convert_csv2_to_source}
\alias{convert_xlsx_to_source}
\alias{convert_sav_to_source}
\title{Convert 'rectangular' or spreadsheet-format data to a source}
\usage{
convert_df_to_source(
  data,
  output = NULL,
  omit_empty_rows = TRUE,
  cols_to_utterances = NULL,
  cols_to_ciids = NULL,
  cols_to_codes = NULL,
  cols_to_attributes = NULL,
  ciid_labels = NULL,
  ciid_separator = "=",
  preventOverwriting = rock::opts$get(preventOverwriting),
  encoding = rock::opts$get(encoding),
  silent = rock::opts$get(silent)
)

convert_csv_to_source(
  file,
  importArgs = NULL,
  omit_empty_rows = TRUE,
  output = NULL,
  cols_to_utterances = NULL,
  cols_to_ciids = NULL,
  cols_to_codes = NULL,
  cols_to_attributes = NULL,
  ciid_labels = NULL,
  ciid_separator = "=",
  preventOverwriting = rock::opts$get(preventOverwriting),
  encoding = rock::opts$get(encoding),
  silent = rock::opts$get(silent)
)

convert_csv2_to_source(
  file,
  importArgs = NULL,
  omit_empty_rows = TRUE,
  output = NULL,
  cols_to_utterances = NULL,
  cols_to_ciids = NULL,
  cols_to_codes = NULL,
  cols_to_attributes = NULL,
  ciid_labels = NULL,
  ciid_separator = "=",
  preventOverwriting = rock::opts$get(preventOverwriting),
  encoding = rock::opts$get(encoding),
  silent = rock::opts$get(silent)
)

convert_xlsx_to_source(
  file,
  importArgs = list(overwrite = !preventOverwriting),
  omit_empty_rows = TRUE,
  output = NULL,
  cols_to_utterances = NULL,
  cols_to_ciids = NULL,
  cols_to_codes = NULL,
  cols_to_attributes = NULL,
  ciid_labels = NULL,
  ciid_separator = "=",
  preventOverwriting = rock::opts$get(preventOverwriting),
  encoding = rock::opts$get(encoding),
  silent = rock::opts$get(silent)
)

convert_sav_to_source(
  file,
  importArgs = NULL,
  omit_empty_rows = TRUE,
  output = NULL,
  cols_to_utterances = NULL,
  cols_to_ciids = NULL,
  cols_to_codes = NULL,
  cols_to_attributes = NULL,
  ciid_labels = NULL,
  ciid_separator = "=",
  preventOverwriting = rock::opts$get(preventOverwriting),
  encoding = rock::opts$get(encoding),
  silent = rock::opts$get(silent)
)
}
\arguments{
\item{data}{The data frame containing the data to convert.}

\item{output}{The name (and path) of the file in which to save the processed
source (if it \emph{is} \code{NULL}, the result will be returned visibly instead of
invisibly).}

\item{omit_empty_rows}{Whether to omit rows where the values in the columns
specified to convert to utterances are all empty (or contain only
whitespace).}

\item{cols_to_utterances}{The names of the columns to convert to utterances,
as a character vectors.}

\item{cols_to_ciids}{The names of the columns to convert to class instance
identifiers (e.g. case identifiers), as a named character vector, with
the values being the column names in the data frame, and}

\item{cols_to_codes}{The names of the columns to convert to codes (i.e.
codes appended to every utterance), as a character vectors.}

\item{cols_to_attributes}{The names of the columns to convert to attributes,
as a named character vector, where each name is the name of the class
instance identifier to attach the attribute to. If only one column is passed
in \code{cols_to_ciids}, names can be omitted and a regular unnames character
vector can be passed.}

\item{preventOverwriting}{Whether to prevent overwriting of output files.}

\item{encoding}{The encoding of the source(s).}

\item{silent}{Whether to suppress the warning about not editing the cleaned source.}

\item{file}{The path to a file containing the data to convert.}

\item{importArgs}{Optionally, a list with named elements representing
arguments to pass when importing the file.}

\item{removeNewlines}{Whether to remove all newline characters from the source before
starting to clean them.}
}
\value{
A source as a character vector.
}
\description{
These functions first import data from a 'data format', such as spreadsheets
in \code{.xlsx} format, comma-separated values files (\code{.csv}), or SPSS data
files (\code{.sav}). You can also just use R data frames (imported however you
want). These functions then use the columns you specified to convert these
data to a \code{rock} source file, optionally including class instance
identifiers (such as case identifiers to identify participants, or location
identifiers, or moment identifiers, etc) and using those to link the
utterances to attributes from columns you specified. You can also precode
the utterances with codes you specify (if you ever would want to for some
reason).
}
\examples{
### Get path to example files
examplePath <-
  system.file("extdata", package="rock");

### Get a path to file with example data frame
exampleFile <-
  file.path(examplePath, "spreadsheet-import-test.csv");

### Read data into a data frame
dat <-
  read.csv(exampleFile);

### Convert data frame to a source
source_from_df <-
  convert_df_to_source(
    dat,
    cols_to_utterances = c("open_question_1",
                           "open_question_2"),
    cols_to_ciids = c(cid = "id"),
    cols_to_attributes = c("age", "gender"),
    cols_to_codes = c("code_1", "code_2"),
    ciid_labels = c(cid = "caseId")
 );

### Show the result
cat(
  source_from_df,
  sep = "\n"
);
}
