% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_source_from_teams.R,
%   R/clean_sources_from_teams.R
\name{clean_source_from_teams}
\alias{clean_source_from_teams}
\alias{cleaning_sources_from_teams}
\title{Cleaning caption files (sources) from Microsoft Teams auto-captioning}
\usage{
clean_source_from_teams(
  input,
  output = NULL,
  keepTime = FALSE,
  flagConfidence = TRUE,
  confFlag = c(0.7),
  removeNewLines = FALSE,
  removeMultiSpace = TRUE,
  preventOverwriting = rock::opts$get(preventOverwriting),
  encoding = rock::opts$get(encoding),
  silent = rock::opts$get(silent)
)

cleaning_sources_from_teams(
  input,
  output = NULL,
  outputPrefix = "",
  outputSuffix = "_cleaned",
  keepTime = FALSE,
  flagConfidence = TRUE,
  confFlag = c(0.7),
  recursive = TRUE,
  filenameRegex = ".*",
  replacementsPre = rock::opts$get(replacementsPre),
  replacementsPost = rock::opts$get(replacementsPost),
  extraReplacementsPre = NULL,
  extraReplacementsPost = NULL,
  removeNewlines = FALSE,
  preventOverwriting = rock::opts$get(preventOverwriting),
  encoding = rock::opts$get(encoding),
  silent = rock::opts$get(silent)
)
}
\arguments{
\item{input}{For \code{clean_source_from_teams} a path to a file that contains
the source transcription. If not a path to a file, then a text object (e.g.,
character vector)}

\item{output}{If not \code{NULL},
this is the name (and path) of the file in which to save the processed source (if it
\emph{is} \code{NULL}, a new file will be created with \verb{_clean} appended to the file name).}

\item{keepTime}{If true, retains the timestamp for each section at the start of the line}

\item{flagConfidence}{If true puts *** at the start of each line where the
automated transcribing is uncertain. Threshold for this flag is set by \code{confFlag}}

\item{confFlag}{sets the threshold below which a line is marked as Teams having
poor confidence in the transcription}

\item{removeMultiSpace}{Teams has several spaces at teh end of each line. If
TRUE, these are removed}

\item{outputPrefix, outputSuffix}{The prefix and suffix to add to the
filenames when writing the processed files to disk.}

\item{recursive}{Whether to search all subdirectories (\code{TRUE}) as well or not.}

\item{filenameRegex}{A regular expression to match against located files; only
files matching this regular expression are processed.}
}
\description{
These functions can be used to 'clean' one or more sets of auto-captions
produced by Microsoft Teams. Cleaning consists of several operations: removing
various Teams headers, removing or tidying time stamps, removing or flagging
lines with low confidence in the transcriping, and removing excess spaces.
This produces a more readable/editable transcript, but will still need
re-punctuating and manual splitting of utterances
}
\details{
This can then be proofread for transcription errors, manually fixing
punctuation (Teams punctuation seems based on pause length rather then
senetence structure), separating utterances (Teams captioning does not
attempt to distinguish speakers) and once ready, further processed.

The output can be set-up to retain the time-stamps related to the recording.
If keepTime is TRUE a single timestamp (rather than a time range) starts each line.
By default, there is also a flag indicating lines where the transcription
confidence is low â€” ie they need more attention when manually cleaning.
confFlag sets the level at which lines are flagged.
}
\examples{
exampleSource <-
"WEBVTT

 NOTE duration:\"01:14:13.5060000\"

 NOTE language:en-us

 NOTE Confidence: 0.864107251167297

 1fbc54e1-43d1-4f2a-b639-ea8466e6f279
 00:00:02.260 --> 00:00:06.412
 Go back on WhatsApp. Yeah. So
 my first question is just a

 NOTE Confidence: 0.864107251167297

 2c90cf04-4e4b-4857-8b40-273d37b1e878
 00:00:06.412 --> 00:00:09.872
 little bit. How did you come
 to teach research methods?"

 clean_source_from_teams("exampleSource")

}
