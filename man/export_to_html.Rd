% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export_to_html.R
\name{export_to_html}
\alias{export_to_html}
\title{Export parsed sources to HTML}
\usage{
export_to_html(input, output = NULL, template = "default",
  preventOverwriting = rock::opts$get(preventOverwriting),
  encoding = rock::opts$get(encoding), silent = rock::opts$get(silent))
}
\arguments{
\item{input}{An object of class \code{rockParsedSource} (as resulting from a call
to \code{parse_source}) or of class \code{rockParsedSources} (as resulting from a call
to \code{parse_sources}.}

\item{output}{Either NULL to not write any files, or, if \code{input} is a single
\code{rockParsedSource}, the filename to write to, and if \code{input} is a \code{rockParsedSources}
object, the path to write to. This path will be created with a warning
if it does not exist.}

\item{template}{The template to load; either the name of one
of the ROCK templates (currently, only 'default' is available), or
the path and filename of a CSS file.}

\item{preventOverwriting}{Whether to prevent overwriting of output files.}

\item{encoding}{The encoding to use when writing the exported source(s).}

\item{silent}{Whether to suppress messages.}
}
\value{
A list of character vectors.
}
\description{
These function can be used to convert one or more parsed sources to HTML.
}
\examples{
### Get path to example source
examplePath <-
  system.file("extdata", package="rock");

### Parse all example sources in that directory
parsedExamples <- rock::parse_sources(examplePath);

### Export results to a temporary directory
tmpDir <- tempdir(check = TRUE);
prettySources <-
  export_to_html(input = parsedExamples,
                 output = tmpDir);

### Show first one
print(prettySources[[1]]);

}
