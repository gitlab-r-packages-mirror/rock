% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_df_to_source.R
\name{convert_df_to_source}
\alias{convert_df_to_source}
\title{Convert a data frame to a source}
\usage{
convert_df_to_source(
  data,
  output = NULL,
  cols_to_utterances = NULL,
  cols_to_ciids = NULL,
  cols_to_codes = NULL,
  cols_to_attributes = NULL,
  ciid_labels = NULL,
  ciid_separator = "=",
  preventOverwriting = rock::opts$get(preventOverwriting),
  encoding = rock::opts$get(encoding),
  silent = rock::opts$get(silent)
)
}
\arguments{
\item{data}{The data frame}

\item{output}{The name (and path) of the file in which to save the processed
source (if it \emph{is} \code{NULL}, the result will be returned visibly).}

\item{cols_to_utterances}{The names of the columns to convert to utterances,
as a character vectors.}

\item{cols_to_ciids}{The names of the columns to convert to class instance
identifiers (e.g. case identifiers), as a named character vector, with
the values being the column names in the data frame, and}

\item{cols_to_codes}{The names of the columns to convert to codes (i.e.
codes appended to every utterance), as a character vectors.}

\item{cols_to_attributes}{The names of the columns to convert to attributes,
as a named character vector, where each name is the name of the class
instance identifier to attach the attribute to. If only one column is passed
in \code{cols_to_ciids}, names can be omitted and a regular unnames character
vector can be passed.}

\item{preventOverwriting}{Whether to prevent overwriting of output files.}

\item{encoding}{The encoding of the source(s).}

\item{silent}{Whether to suppress the warning about not editing the cleaned source.}

\item{removeNewlines}{Whether to remove all newline characters from the source before
starting to clean them.}
}
\value{
A source as a character vector.
}
\description{
Convert a data frame to a source
}
\examples{
### Get path to example files
examplePath <-
  system.file("extdata", package="rock");

### Get a path to file with example data frame
exampleFile <-
  file.path(examplePath, "spreadsheet-import-test.csv");

### Read data into a data frame
dat <-
  read.csv(exampleFile);

### Convert data frame to a source
source_from_df <-
  convert_df_to_source(
    dat,
    cols_to_utterances = c("open_question_1",
                           "open_question_2"),
    cols_to_ciids = c(cid = "id"),
    cols_to_attributes = c("age", "gender"),
    cols_to_codes = c("code_1", "code_2"),
    ciid_labels = c(cid = "caseId")
 );

### Show the result
cat(
  source_from_df,
  sep = "\n"
);
}
